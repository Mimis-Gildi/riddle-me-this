name: "Codacy Security Scan"
run-name: "Codacy Security Scan on [${{ github.repository }}] @ ${{ github.ref }} by ${{ github.actor }} with ${{ github.event_name }}"

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      restriction:
        required: true
        type: string

permissions:
  contents: read
  actions: read
  security-events: write

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-codacy"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:

  code-security-scan-with-codacy:
    timeout-minutes: 27
    runs-on: ubuntu-latest
    name: "Codacy Security Scan with Publishing"

    steps:

      - name: "Checkout repository source code"
        uses: actions/checkout@v4
        timeout-minutes: 3

      # Analyzer runs (Codacy Analysis CLI per tool)

      - name: "Codacy Bandit Analysis"
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        timeout-minutes: 5
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: bandit
          output: bandit.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 999

      - name: "Codacy Pylint Analysis"
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        timeout-minutes: 5
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: pylint
          output: pylint.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 999

      - name: "Codacy SpotBugs Analysis"
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        timeout-minutes: 5
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: spotbugs
          output: spotbugs.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 999

      - name: "Codacy Detekt Analysis"
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        timeout-minutes: 5
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: detekt
          output: detekt.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 999

      - name: "Codacy RuboCop Analysis"
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        timeout-minutes: 5
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: rubocop
          output: rubocop.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 999

      - name: "Codacy Semgrep Analysis"
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        timeout-minutes: 5
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: semgrep
          output: semgrep.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 999

      # Upload SARIF files individually only if non-empty
      - name: "Upload SARIF for Bandit"
        if: ${{ hashFiles('bandit.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3.28.18
        with:
          sarif_file: bandit.sarif

      - name: "Upload SARIF for Pylint"
        if: ${{ hashFiles('pylint.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3.28.18
        with:
          sarif_file: pylint.sarif

      - name: "Upload SARIF for SpotBugs"
        if: ${{ hashFiles('spotbugs.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3.28.18
        with:
          sarif_file: spotbugs.sarif

      - name: "Upload SARIF for Detekt"
        if: ${{ hashFiles('detekt.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3.28.18
        with:
          sarif_file: detekt.sarif

      - name: "Upload SARIF for RuboCop"
        if: ${{ hashFiles('rubocop.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3.28.18
        with:
          sarif_file: rubocop.sarif

      - name: "Upload SARIF for Semgrep"
        if: ${{ hashFiles('semgrep.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3.28.18
        with:
          sarif_file: semgrep.sarif

  code-security-scan-codacy-postmortem:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: code-security-scan-with-codacy
    name: "Codacy Quality Scan Execution Validation and Recovery"

    steps:

      - name: "ToDo: Codacy Analysis Postmortem"
        run: |
          echo -e "\n\nCodacy Analysis Postmortem placeholder.\n\n"
