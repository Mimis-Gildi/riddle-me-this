name: Idempotent Release Notes
run-name: "Generated or Updated Release Notes on ${{ github.repository }} by ${{ github.actor }} with ${{ github.event_name }} (Attempt ${{ github.run_attempt }})"

on:
  pull_request:
    types:
      - reopened
      - opened
      - synchronize
  issue_comment:
    types: [created]
  workflow_dispatch:


permissions:
  contents: write

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-release-notes-generator"
  cancel-in-progress: true

defaults:
  run:
    shell: zsh -l {0}

jobs:

  generate-running-release-notes:
    name: Detect Versions, Seed File, Inject Data
    runs-on: [self-hosted, feature]
    timeout-minutes: 11

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4.3.0
        with:
          fetch-depth: 0
          fetch-tags: true


      - name: Guard Branch
        id: branch-guard
        uses: ./.github/actions/feature-fail-fast


      - name: üîç Extract canonical component version and semantic tag
        id: version-info
        if: steps.branch-guard.outputs.feature == 'true'
        uses: ./.github/actions/extract-component-version-and-tag


      - name: üìé Confirm presence of seeded release notes
        id: notes-exist
        if: steps.branch-guard.outputs.feature == 'true'
        uses: ./.github/actions/verify-release-notes-file-present
        with:
          tag: ${{ steps.version-info.outputs.tag }}
          strict: false


      - name: Seed New Release Notes File
        if: steps.branch-guard.outputs.feature == 'true' && steps.notes-exist.outputs.exists != 'true'
        id: notes-seed-new
        uses: ./.github/actions/release-notes-create
        with:
          version: ${{ steps.version-info.outputs.version }}


      - name: ‚úÖ Release Notes Already Present
        if: steps.branch-guard.outputs.feature == 'true' && steps.notes-exist.outputs.exists == 'true'
        run: |
          echo "::group::Release Notes Check"
          echo "::notice title=Already Present::Release notes exist ‚Äî skipping seed"
          echo " ‚Üí File: releases/${{ steps.version-info.outputs.tag }}.md"
          echo "::endgroup::"


      - name: Extract all feature Commit Messages
        if: steps.branch-guard.outputs.feature == 'true' && ( steps.notes-exist.outputs.exists == 'true' || steps.notes-seed-new.outputs.created == 'true' )
        id: commit-log
        timeout-minutes: 3
        uses: ./.github/actions/release-notes-extract-commits


      - name: Extract all feature Changed Files
        if: steps.branch-guard.outputs.feature == 'true' && ( steps.notes-exist.outputs.exists == 'true' || steps.notes-seed-new.outputs.created == 'true' )
        id: file-log
        timeout-minutes: 3
        uses: ./.github/actions/release-notes-extract-files-changed


      - name: Write Logs and Files into Release Notes
        if: steps.branch-guard.outputs.feature == 'true' && ( steps.notes-exist.outputs.exists == 'true' || steps.notes-seed-new.outputs.created == 'true' )
        id: append
        timeout-minutes: 5
        uses: ./.github/actions/release-notes-write-notes
        with:
          version: ${{ steps.version-info.outputs.version }}
          comments: ${{ steps.commit-log.outputs.commits }}
          files: ${{ steps.file-log.outputs.files }}


      - name: Commit Release Notes Footer
        if: steps.branch-guard.outputs.feature == 'true' && steps.append.outputs.changed == 'true'
        uses: ./.github/actions/commit-and-push-files
        timeout-minutes: 7
        with:
          files: releases/v${{ steps.version-info.outputs.version }}.md
          message: "üìù Inject commits into release notes v${{ steps.version-info.outputs.version }}"


      - name: Detected Changes
        if: steps.branch-guard.outputs.feature == 'true' && steps.append.outputs.changed == 'true'
        run: echo "::notice title=Release Notes Footer Changes::${{steps.append.outputs.diff }}"