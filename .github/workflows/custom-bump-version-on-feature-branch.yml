name: Version Bump on Feature Creation
run-name: "Incremented Version on ${{ github.repository }}] by ${{ github.actor }} with ${{ github.event_name }}; (${{github.run_attempt}})."
#.github/workflows/custom-bump-version-on-feature-branch.yml

on:
  create:
    branches-ignore:
      - main

jobs:

  bump_minor_version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:

      - name: ‚è≥ Wait for GitHub ref propagation
        run: sleep 5

      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true


      - name: ü¶™ Check if branch matches issue-style (e.g. 12-feature-title)
        id: check
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "::notice title=Branch Name::$BRANCH_NAME"
          if [[ "$BRANCH_NAME" =~ ^[0-9]+- ]]; then
            echo "‚úÖ Branch matches pattern: issue-style feature"
            echo "::notice title=Branch Match::‚úÖ Pattern matched"
            echo "proceed=true" >> $GITHUB_OUTPUT
            ISSUE_NUMBER=$(echo "$BRANCH_NAME" | cut -d- -f1)
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Branch does not match feature pattern, skipping."
            echo "::warning title=Branch Skipped::‚ùå Not a feature branch, skipping version bump."
            echo "proceed=false" >> $GITHUB_OUTPUT
          fi

      - name: üè∑Ô∏è Check for major label on issue
        if: steps.check.outputs.proceed == 'true'
        id: label-check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=${{ steps.check.outputs.issue_number }}
          echo "üîé Inspecting labels for issue #$ISSUE_NUMBER"
          LABELS=$(gh issue view "$ISSUE_NUMBER" --json labels --jq '.labels[].name' || echo '')
          echo "::notice title=Labels Fetched::$LABELS"
          if [[ "$LABELS" == *"major"* ]]; then
            echo "promote=major" >> $GITHUB_OUTPUT
            echo "::notice title=Version Type::üöÄ MAJOR bump triggered"
          else
            echo "promote=minor" >> $GITHUB_OUTPUT
            echo "::notice title=Version Type::üîÅ minor bump"
          fi

      - name: üß¨ Bump properties version
        if: steps.check.outputs.proceed == 'true'
        id: version-bump
        run: |
          FILE="gradle.properties"
          VERSION=$(grep '^version=' "$FILE" | cut -d= -f2)
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          PATCH=$(echo "$VERSION" | cut -d. -f3)

          echo "old=$VERSION" >> $GITHUB_OUTPUT

          if [[ "${{ steps.label-check.outputs.promote }}" == "major" ]]; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif [[ "${{ steps.label-check.outputs.promote }}" == "minor" ]]; then
            NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
          else 
            NEW_VERSION="error"
            echo "::error title=Version promotion Failed::Version selection of ${{ steps.label-check.outputs.promote }} is NOT understood."
            exit 11
          fi

          echo "::notice title=Version Bumped::üîÑ $VERSION ‚Üí $NEW_VERSION"
          sed -i "s/^version=.*/version=$NEW_VERSION/" "$FILE"
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: üìù Update README.adoc version references
        if: steps.check.outputs.proceed == 'true'
        run: |
          OLD_VERSION="${{ steps.version-bump.outputs.old }}"
          NEW_VERSION="${{ steps.version-bump.outputs.new }}"

          echo "::notice title=README Version Update::üîÑ $OLD_VERSION ‚Üí $NEW_VERSION"

          sed -i "s/^== üìÑ R√©sum√© Release v$OLD_VERSION/== üìÑ R√©sum√© Release v$NEW_VERSION/" README.adoc
          sed -i "s/releases\/tag\/v$OLD_VERSION/releases\/tag\/v$NEW_VERSION/" README.adoc
          sed -i "s/download\/v$OLD_VERSION\/OnEngineering.pdf/download\/v$NEW_VERSION\/OnEngineering.pdf/" README.adoc
          sed -i "s/download\/v$OLD_VERSION\/OnCreativity.pdf/download\/v$NEW_VERSION\/OnCreativity.pdf/" README.adoc
          sed -i "s/download\/v$OLD_VERSION\/OnLeadership.pdf/download\/v$NEW_VERSION\/OnLeadership.pdf/" README.adoc

      - name: üìù Update maintainer.adoc version references
        if: steps.check.outputs.proceed == 'true'
        run: |
          OLD_VERSION="${{ steps.version-bump.outputs.old }}"
          NEW_VERSION="${{ steps.version-bump.outputs.new }}"

          if [[ -f site/_pages/maintainer.adoc ]]; then
            echo "::notice title=Maintainer Version Update::üîÑ $OLD_VERSION ‚Üí $NEW_VERSION"
            sed -i "s/releases\/tag\/v$OLD_VERSION/releases\/tag\/v$NEW_VERSION/" site/_pages/maintainer.adoc
            sed -i "s/v$OLD_VERSION/v$NEW_VERSION/g" site/_pages/maintainer.adoc
          else
            echo "::warning title=Maintainer File Missing::‚ö†Ô∏è site/_pages/maintainer.adoc not found"
          fi

      - name: üìù Update index.adoc version references
        if: steps.check.outputs.proceed == 'true'
        run: |
          OLD_VERSION="${{ steps.version-bump.outputs.old }}"
          NEW_VERSION="${{ steps.version-bump.outputs.new }}"

          if [[ -f site/index.adoc ]]; then
            echo "::notice title=Landing Page Version Update::üîÑ $OLD_VERSION ‚Üí $NEW_VERSION"
            sed -i "s/releases\/tag\/v$OLD_VERSION/releases\/tag\/v$NEW_VERSION/" site/index.adoc
            sed -i "s/v$OLD_VERSION/v$NEW_VERSION/g" site/index.adoc
          else
            echo "::warning title=Site Root File Missing::‚ö†Ô∏è site/index.adoc not found"
          fi

      - name: üìù Update SECURITY.md version references
        if: steps.check.outputs.proceed == 'true'
        run: |
          OLD_VERSION="${{ steps.version-bump.outputs.old }}"
          NEW_VERSION="${{ steps.version-bump.outputs.new }}"

          if [[ -f SECURITY.md ]]; then
            echo "::notice title=Security Policy Version Update::üîÑ $OLD_VERSION ‚Üí $NEW_VERSION"
            sed -i "s/releases\/tag\/v$OLD_VERSION/releases\/tag\/v$NEW_VERSION/" SECURITY.md
            sed -i "s/v$OLD_VERSION/v$NEW_VERSION/g" SECURITY.md
          else
            echo "::warning title=Security Policy File Missing::‚ö†Ô∏è SECURITY.md not found"
          fi

      - name: üìÇ Commit and push new version
        if: steps.check.outputs.proceed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch --all --tags --prune --jobs=8
          git pull
          git add gradle.properties SECURITY.md README.adoc site/_pages/maintainer.adoc site/index.adoc  || true
          git commit -m "üîº Auto bump version to ${{ steps.version-bump.outputs.new }}"
          git push || {
            echo "::warning title=Push Failed::‚ö†Ô∏è Git push failed ‚Äî manual intervention may be required."
            exit 13
          }

      - name: üèãÔ∏è Summary annotation
        if: steps.check.outputs.proceed == 'true'
        run: |
          echo "::notice title=üìÖ Bump Summary::
          Branch:   ${GITHUB_REF#refs/heads/}
          From:     ${{ steps.version-bump.outputs.old }}
          To:       ${{ steps.version-bump.outputs.new }}
          Bump:     ${{ steps.label-check.outputs.promote }}
          Files touched: gradle.properties, SECURITY.md, README.adoc, site/_pages/maintainer.adoc, and site/index.adoc."
