name: Runner Canary
run-name: "Introspect Runner on ${{ github.repository }} by ${{ github.actor }} with ${{ github.event_name }} (Attempt ${{ github.run_attempt }})"
#.github/workflows/custom-runner-introspect.yml

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      host-info:
        required: false
        type: boolean
        default: true
        description: "Should we probe for Hosted Infra? This is useful for debugging issues with Hosted Infra."


defaults:
  run:
    shell: zsh -l {0}

jobs:
  probe:
    runs-on: [self-hosted, peep]
    timeout-minutes: 11

    steps:

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true


      - name: Detect Runner Type
        id: env
        uses: ./.github/actions/detect-runner-type


      - name: Hosted Infra Snapshot
        if: inputs.host-info == 'true'
        run: |
          echo "::group::üñ•Ô∏è Hosted Infra Fingerprint"
          echo "::notice title=Event::$GITHUB_EVENT_NAME"
          echo "::notice title=Branch::$GITHUB_REF_NAME"
          echo "::notice title=OS:: $(cat /etc/issue || true)"
          echo "::notice title=Kernel::$(uname -v || true)"
          echo "::notice title=Memory::$(free -hg || true)"
          echo "::notice title=CPU::$(nproc) cores, $(lscpu | grep 'Model name' | uniq || true)"
          echo "::notice title=Git::$(git --version || true)"
          echo "::notice title=GitHub CLI::$(gh version || true)"
          echo "::notice title=Runner::${{ steps.env.outputs.runner-name }} (${{ steps.env.outputs.runner-nick }})"
          echo "::endgroup::"


      - name: Toolchain Validation
        id: introspect
        if: steps.env.outputs.is-self-hosted == 'true'
        timeout-minutes: 7
        uses: ./.github/actions/introspect-runner


      - name: Toolchain Validation Report
        if: steps.env.outputs.is-self-hosted == 'true' && ( steps.introspect.outputs.sdkman-matches == 'false' || steps.introspect.outputs.sdks-all-match == 'false')
        run: |
          echo "::group::Toolchain Validation Report"
          echo "::notice title=SDKMAN::Present: ${{ steps.introspect.outputs.sdkman }}, Version Match: ${{ steps.introspect.outputs.sdkman-matches }}"
          echo "::notice title=SDKMAN Reported::script=${{ steps.introspect.outputs.sdkman-version }}, native=${{ steps.introspect.outputs.sdkman-native }}"

          if [[ "${{ steps.introspect.outputs.sdks-have-missing }}" == "true" ]]; then
            echo "::warning title=Missing SDKs::${{ steps.introspect.outputs.missing-sdks }}"
          fi

          if [[ -n "${{ steps.introspect.outputs.added-sdks }}" ]]; then
            echo "::notice title=Extra SDKs Installed::${{ steps.introspect.outputs.added-sdks }}"
          fi

          if [[ -n "${{ steps.introspect.outputs.mismatched-sdks }}" ]]; then
            echo "::error title=Mismatched SDKs::${{ steps.introspect.outputs.mismatched-sdks }}"
          fi

          echo "::endgroup::"