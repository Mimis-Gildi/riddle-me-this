name: Publish Current Release
run-name: "Published R√©sum√© Release on ${{ github.repository }}] by ${{ github.actor }} with ${{ github.event_name }}; (${{github.run_attempt}})."
#.github/workflows/custom-publish-resume-release.yml

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      prerelease:
        required: false
        type: boolean
        default: false
        description: 'Mark this release as a pre-release'

permissions:
  contents: write


jobs:
  resume-publish:
    if: >
      github.event.pull_request.merged == true &&
      contains(join(github.event.pull_request.labels.*.name, ','), 'resume')
    runs-on: ubuntu-latest
    name: "Publish Resume Artifacts"
    timeout-minutes: 17

    steps:

      - name: Checkout
        id: checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        id: java-setup
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Gradle
        id: gradle-setup
        uses: gradle/actions/setup-gradle@v4.4.0

      - name: Generate and Submit this Dependency Graph
        id: dependency-submission
        uses: gradle/actions/dependency-submission@v4.4.0

      - name: Build Resumes
        run: ./gradlew asciidoctorPdf

      - name: Get Version from gradle.properties
        id: props
        run: |
          VERSION=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "::notice title=Version Aware::ü™ú Detected version: $VERSION"

      - name: Create Git Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          if git rev-parse "v${{ steps.props.outputs.version }}" >/dev/null 2>&1; then
            echo "::warning title=Tag Exists::Tag v${{ steps.props.outputs.version }} already exists. Skipping tagging."
          else
            git tag v${{ steps.props.outputs.version }}
            git push origin v${{ steps.props.outputs.version }}
            echo "::notice title=Tag Created::ü™ú Tagged v${{ steps.props.outputs.version }}"
          fi

      - name: Check that Release Notes exist to be used.
        run: |
          NOTES_FILE=releases/v${{ steps.props.outputs.version }}.md
          if [ ! -f "$NOTES_FILE" ]; then
            echo "::error title=‚ùå Release Notes Missing::Release notes not found: $NOTES_FILE (Required for release creation)"
            exit 1
          fi

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.16.0
        with:
          tag: v${{ steps.props.outputs.version }}
          name: "R√©sum√© Bundle v${{ steps.props.outputs.version }}"
          bodyFile: releases/v${{ steps.props.outputs.version }}.md
          prerelease: ${{ github.event.inputs.prerelease }}
          artifacts: build/docs/asciidocPdf/*.pdf
